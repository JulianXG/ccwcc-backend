<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.kalyter.ccwcc.dao.BirdMapper">
  <resultMap id="BaseResultMap" type="cn.kalyter.ccwcc.model.Bird">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name_zh" jdbcType="VARCHAR" property="nameZh" />
    <result column="name_en" jdbcType="VARCHAR" property="nameEn" />
    <result column="name_lt" jdbcType="VARCHAR" property="nameLt" />
    <result column="protect_class" jdbcType="INTEGER" property="protectClass" />
    <result column="nation" jdbcType="VARCHAR" property="nation" />
    <result column="order" jdbcType="VARCHAR" property="order" />
    <result column="family" jdbcType="VARCHAR" property="family" />
    <result column="genus" jdbcType="VARCHAR" property="genus" />
    <result column="category" jdbcType="VARCHAR" property="category" />
    <result column="one_percent_standard" jdbcType="INTEGER" property="onePercentStandard" />
    <result column="threatened" jdbcType="VARCHAR" property="threatened" />
    <result column="is_water_bird" jdbcType="BIT" property="isWaterBird" />
    <result column="is_wetland_depend_bird" jdbcType="BIT" property="isWetlandDependBird" />
    <result column="zh_pinyin" jdbcType="VARCHAR" property="zhPinyin" />
    <result column="is_alive" jdbcType="BIT" property="isAlive" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, code, name_zh, name_en, name_lt, protect_class, nation, 'order', family, genus,
    category, one_percent_standard, threatened, is_water_bird, is_wetland_depend_bird,
    zh_pinyin, is_alive, is_deleted, create_time, update_time
  </sql>
  <sql id="Excel_Column_List">
    b.code,b.name_zh,b.name_en,b.category,b.one_percent_standard,b.threatened,r.bird_count birdCount,r.record_time recordTime
  </sql>
  <select id="getExcelData" resultMap="BaseResultMap">
    SELECT
      <include refid="Excel_Column_List"/>

    FROM record r LEFT JOIN bird b ON b.id = r.bird_id
  <where>
    <if test="keyword!=null">
      and  (
      b.name_zh like concat('%',#{keyword},'%') or
      b.category like concat('%',#{keyword},'%')
      )
    </if>
  </where>
  </select>
  <select id="selectByExample" parameterType="cn.kalyter.ccwcc.model.BirdExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bird
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart&gt;=0">
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from bird
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bird
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.kalyter.ccwcc.model.BirdExample">
    delete from bird
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.kalyter.ccwcc.model.Bird">
    insert into bird (id, code, name_zh,
      name_en, name_lt, protect_class,
      nation, order, family,
      genus, category, one_percent_standard,
      threatened, is_water_bird, is_wetland_depend_bird,
      zh_pinyin, is_alive, is_deleted,
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{nameZh,jdbcType=VARCHAR},
      #{nameEn,jdbcType=VARCHAR}, #{nameLt,jdbcType=VARCHAR}, #{protectClass,jdbcType=INTEGER},
      #{nation,jdbcType=VARCHAR}, #{order,jdbcType=VARCHAR}, #{family,jdbcType=VARCHAR},
      #{genus,jdbcType=VARCHAR}, #{category,jdbcType=VARCHAR}, #{onePercentStandard,jdbcType=INTEGER},
      #{threatened,jdbcType=VARCHAR}, #{isWaterBird,jdbcType=BIT}, #{isWetlandDependBird,jdbcType=BIT},
      #{zhPinyin,jdbcType=VARCHAR}, #{isAlive,jdbcType=BIT}, #{isDeleted,jdbcType=BIT},
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.kalyter.ccwcc.model.Bird">
    insert into bird
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="nameZh != null">
        name_zh,
      </if>
      <if test="nameEn != null">
        name_en,
      </if>
      <if test="nameLt != null">
        name_lt,
      </if>
      <if test="protectClass != null">
        protect_class,
      </if>
      <if test="nation != null">
        nation,
      </if>
      <if test="order != null">
        `order`,
      </if>
      <if test="family != null">
        family,
      </if>
      <if test="genus != null">
        genus,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="onePercentStandard != null">
        one_percent_standard,
      </if>
      <if test="threatened != null">
        threatened,
      </if>
      <if test="isWaterBird != null">
        is_water_bird,
      </if>
      <if test="isWetlandDependBird != null">
        is_wetland_depend_bird,
      </if>
      <if test="zhPinyin != null">
        zh_pinyin,
      </if>
      <if test="isAlive != null">
        is_alive,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="nameZh != null">
        #{nameZh,jdbcType=VARCHAR},
      </if>
      <if test="nameEn != null">
        #{nameEn,jdbcType=VARCHAR},
      </if>
      <if test="nameLt != null">
        #{nameLt,jdbcType=VARCHAR},
      </if>
      <if test="protectClass != null">
        #{protectClass,jdbcType=INTEGER},
      </if>
      <if test="nation != null">
        #{nation,jdbcType=VARCHAR},
      </if>
      <if test="order != null">
        #{order,jdbcType=VARCHAR},
      </if>
      <if test="family != null">
        #{family,jdbcType=VARCHAR},
      </if>
      <if test="genus != null">
        #{genus,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="onePercentStandard != null">
        #{onePercentStandard,jdbcType=INTEGER},
      </if>
      <if test="threatened != null">
        #{threatened,jdbcType=VARCHAR},
      </if>
      <if test="isWaterBird != null">
        #{isWaterBird,jdbcType=BIT},
      </if>
      <if test="isWetlandDependBird != null">
        #{isWetlandDependBird,jdbcType=BIT},
      </if>
      <if test="zhPinyin != null">
        #{zhPinyin,jdbcType=VARCHAR},
      </if>
      <if test="isAlive != null">
        #{isAlive,jdbcType=BIT},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.kalyter.ccwcc.model.BirdExample" resultType="java.lang.Integer">
    select count(*) from bird
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="getBirdName" resultMap="BaseResultMap">
    SELECT DISTINCT r.bird_id,b.name_zh,b.category
    FROM record r LEFT JOIN bird b on r.bird_id = b.id
    <where>
      <if test="startDate != null and endDate != null">
        r.record_time &lt;= #{endDate} and r.record_time &gt;= #{startDate}
      </if>
      <if test="keyword!=null">
        and (b.name_zh like concat('%',#{keyword},'%') or b.category like concat('%',#{keyword},'%') )
      </if>
      <if test="checkpointId > 0">
        and r.checkpoint_id = #{checkpointId}
      </if>
    </where>
    <if test="beginIndex != null and pageSize != null">
      LIMIT #{beginIndex}, #{pageSize}
    </if>
  </select>
  <select id="getBirdListByMonth" resultMap="BaseResultMap">
    SELECT  r.bird_id id,b.name_zh,b.category, SUM(r.bird_count) birdCount
    FROM record r LEFT JOIN bird b on r.bird_id = b.id
    <where>
      <if test="checkpointId > 0">
        r.checkpoint_id = #{checkpointId} and
      </if>
      r.record_time &lt;= #{endDate} and
      r.record_time &gt;= #{startDate}
      <if test="keyword!=null">
        and  (
        b.name_zh like concat('%',#{keyword},'%') or
        b.category like concat('%',#{keyword},'%')
        )
      </if>
    </where>
    GROUP BY r.bird_id
  </select>
  <select id="getEarliestDate" resultType="java.util.Date">
    SELECT record_time
    FROM record r
    LEFT JOIN bird b ON r.bird_id = b.id
    <include refid="keywordWhereSql"/>
    ORDER BY record_time ASC
    LIMIT 1
  </select>
  <select id="getOldestDate" resultType="java.util.Date">
    SELECT record_time
    FROM record r
    LEFT JOIN bird b ON r.bird_id = b.id
    <include refid="keywordWhereSql"/>

    ORDER BY record_time DESC
    LIMIT 1
  </select>
  <select id="getCategories" resultType="java.lang.String">
    SELECT DISTINCT category
    FROM bird
    <include refid="keywordWhereSql"/>
  </select>
  <select id="countBirds" resultType="java.lang.Integer">
    SELECT COUNT(DISTINCT r.bird_id)
    FROM record r LEFT JOIN bird b on r.bird_id = b.id
    <where>
      <if test="startDate != null and endDate != null">
        r.record_time &lt;= #{endDate} and r.record_time &gt;= #{startDate}
      </if>
      <if test="keyword!=null">
        and (b.name_zh like concat('%',#{keyword},'%') or b.category like concat('%',#{keyword},'%') )
      </if>
      <if test="checkpointId > 0">
        and r.checkpoint_id = #{checkpointId}
      </if>
    </where>
  </select>

  <sql id="keywordWhereSql">
    <where>
      <if test="checkpointId > 0">
        r.checkpoint_id = #{checkpointId} AND
      </if>
      <if test="keyword != null">
        (b.name_zh LIKE CONCAT('%', #{keyword}, '%') OR
        b.category LIKE CONCAT('%', #{keyword}, '%'))
      </if>
    </where>
  </sql>
  <update id="updateByExampleSelective" parameterType="map">
    update bird
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.nameZh != null">
        name_zh = #{record.nameZh,jdbcType=VARCHAR},
      </if>
      <if test="record.nameEn != null">
        name_en = #{record.nameEn,jdbcType=VARCHAR},
      </if>
      <if test="record.nameLt != null">
        name_lt = #{record.nameLt,jdbcType=VARCHAR},
      </if>
      <if test="record.protectClass != null">
        protect_class = #{record.protectClass,jdbcType=INTEGER},
      </if>
      <if test="record.nation != null">
        nation = #{record.nation,jdbcType=VARCHAR},
      </if>
      <if test="record.order != null">
        order = #{record.order,jdbcType=VARCHAR},
      </if>
      <if test="record.family != null">
        family = #{record.family,jdbcType=VARCHAR},
      </if>
      <if test="record.genus != null">
        genus = #{record.genus,jdbcType=VARCHAR},
      </if>
      <if test="record.category != null">
        category = #{record.category,jdbcType=VARCHAR},
      </if>
      <if test="record.onePercentStandard != null">
        one_percent_standard = #{record.onePercentStandard,jdbcType=INTEGER},
      </if>
      <if test="record.threatened != null">
        threatened = #{record.threatened,jdbcType=VARCHAR},
      </if>
      <if test="record.isWaterBird != null">
        is_water_bird = #{record.isWaterBird,jdbcType=BIT},
      </if>
      <if test="record.isWetlandDependBird != null">
        is_wetland_depend_bird = #{record.isWetlandDependBird,jdbcType=BIT},
      </if>
      <if test="record.zhPinyin != null">
        zh_pinyin = #{record.zhPinyin,jdbcType=VARCHAR},
      </if>
      <if test="record.isAlive != null">
        is_alive = #{record.isAlive,jdbcType=BIT},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=BIT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bird
    set id = #{record.id,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      name_zh = #{record.nameZh,jdbcType=VARCHAR},
      name_en = #{record.nameEn,jdbcType=VARCHAR},
      name_lt = #{record.nameLt,jdbcType=VARCHAR},
      protect_class = #{record.protectClass,jdbcType=INTEGER},
      nation = #{record.nation,jdbcType=VARCHAR},
      order = #{record.order,jdbcType=VARCHAR},
      family = #{record.family,jdbcType=VARCHAR},
      genus = #{record.genus,jdbcType=VARCHAR},
      category = #{record.category,jdbcType=VARCHAR},
      one_percent_standard = #{record.onePercentStandard,jdbcType=INTEGER},
      threatened = #{record.threatened,jdbcType=VARCHAR},
      is_water_bird = #{record.isWaterBird,jdbcType=BIT},
      is_wetland_depend_bird = #{record.isWetlandDependBird,jdbcType=BIT},
      zh_pinyin = #{record.zhPinyin,jdbcType=VARCHAR},
      is_alive = #{record.isAlive,jdbcType=BIT},
      is_deleted = #{record.isDeleted,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.kalyter.ccwcc.model.Bird">
    update bird
    <set>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="nameZh != null">
        name_zh = #{nameZh,jdbcType=VARCHAR},
      </if>
      <if test="nameEn != null">
        name_en = #{nameEn,jdbcType=VARCHAR},
      </if>
      <if test="nameLt != null">
        name_lt = #{nameLt,jdbcType=VARCHAR},
      </if>
      <if test="protectClass != null">
        protect_class = #{protectClass,jdbcType=INTEGER},
      </if>
      <if test="nation != null">
        nation = #{nation,jdbcType=VARCHAR},
      </if>
      <if test="order != null">
        order = #{order,jdbcType=VARCHAR},
      </if>
      <if test="family != null">
        family = #{family,jdbcType=VARCHAR},
      </if>
      <if test="genus != null">
        genus = #{genus,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="onePercentStandard != null">
        one_percent_standard = #{onePercentStandard,jdbcType=INTEGER},
      </if>
      <if test="threatened != null">
        threatened = #{threatened,jdbcType=VARCHAR},
      </if>
      <if test="isWaterBird != null">
        is_water_bird = #{isWaterBird,jdbcType=BIT},
      </if>
      <if test="isWetlandDependBird != null">
        is_wetland_depend_bird = #{isWetlandDependBird,jdbcType=BIT},
      </if>
      <if test="zhPinyin != null">
        zh_pinyin = #{zhPinyin,jdbcType=VARCHAR},
      </if>
      <if test="isAlive != null">
        is_alive = #{isAlive,jdbcType=BIT},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.kalyter.ccwcc.model.Bird">
    update bird
    set code = #{code,jdbcType=VARCHAR},
      name_zh = #{nameZh,jdbcType=VARCHAR},
      name_en = #{nameEn,jdbcType=VARCHAR},
      name_lt = #{nameLt,jdbcType=VARCHAR},
      protect_class = #{protectClass,jdbcType=INTEGER},
      nation = #{nation,jdbcType=VARCHAR},
      order = #{order,jdbcType=VARCHAR},
      family = #{family,jdbcType=VARCHAR},
      genus = #{genus,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR},
      one_percent_standard = #{onePercentStandard,jdbcType=INTEGER},
      threatened = #{threatened,jdbcType=VARCHAR},
      is_water_bird = #{isWaterBird,jdbcType=BIT},
      is_wetland_depend_bird = #{isWetlandDependBird,jdbcType=BIT},
      zh_pinyin = #{zhPinyin,jdbcType=VARCHAR},
      is_alive = #{isAlive,jdbcType=BIT},
      is_deleted = #{isDeleted,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>