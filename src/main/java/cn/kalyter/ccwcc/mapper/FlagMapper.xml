<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.kalyter.ccwcc.dao.FlagMapper" >
  <resultMap id="BaseResultMap" type="cn.kalyter.ccwcc.model.Flag" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="bird_id" property="birdId" jdbcType="INTEGER" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="flag_color_combination" property="flagColorCombination" jdbcType="CHAR" />
    <result column="lu" property="lu" jdbcType="CHAR" />
    <result column="ru" property="ru" jdbcType="CHAR" />
    <result column="ld" property="ld" jdbcType="CHAR" />
    <result column="rd" property="rd" jdbcType="CHAR" />
    <result column="discovered_time" property="discoveredTime" jdbcType="TIMESTAMP" />
    <result column="note" property="note" jdbcType="VARCHAR" />
    <result column="is_deleted" property="isDeleted" jdbcType="BIT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, bird_id, code, flag_color_combination, lu, ru, ld, rd, discovered_time, 
    note, is_deleted, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.kalyter.ccwcc.model.FlagExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from flag
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from flag
    where id = #{id,jdbcType=INTEGER}
  </select>
  <insert id="insert" parameterType="cn.kalyter.ccwcc.model.Flag" >
    insert into flag (id, user_id, bird_id, 
      code, flag_color_combination, lu, 
      ru, ld, rd, discovered_time, 
      note, is_deleted, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{birdId,jdbcType=INTEGER}, 
      #{code,jdbcType=VARCHAR}, #{flagColorCombination,jdbcType=CHAR}, #{lu,jdbcType=CHAR}, 
      #{ru,jdbcType=CHAR}, #{ld,jdbcType=CHAR}, #{rd,jdbcType=CHAR}, #{discoveredTime,jdbcType=TIMESTAMP}, 
      #{note,jdbcType=VARCHAR}, #{isDeleted,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.kalyter.ccwcc.model.Flag" >
    insert into flag
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="birdId != null" >
        bird_id,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="flagColorCombination != null" >
        flag_color_combination,
      </if>
      <if test="lu != null" >
        lu,
      </if>
      <if test="ru != null" >
        ru,
      </if>
      <if test="ld != null" >
        ld,
      </if>
      <if test="rd != null" >
        rd,
      </if>
      <if test="discoveredTime != null" >
        discovered_time,
      </if>
      <if test="note != null" >
        note,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="birdId != null" >
        #{birdId,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="flagColorCombination != null" >
        #{flagColorCombination,jdbcType=CHAR},
      </if>
      <if test="lu != null" >
        #{lu,jdbcType=CHAR},
      </if>
      <if test="ru != null" >
        #{ru,jdbcType=CHAR},
      </if>
      <if test="ld != null" >
        #{ld,jdbcType=CHAR},
      </if>
      <if test="rd != null" >
        #{rd,jdbcType=CHAR},
      </if>
      <if test="discoveredTime != null" >
        #{discoveredTime,jdbcType=TIMESTAMP},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.kalyter.ccwcc.model.FlagExample" resultType="java.lang.Integer" >
    select count(*) from flag
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update flag
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.birdId != null" >
        bird_id = #{record.birdId,jdbcType=INTEGER},
      </if>
      <if test="record.code != null" >
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.flagColorCombination != null" >
        flag_color_combination = #{record.flagColorCombination,jdbcType=CHAR},
      </if>
      <if test="record.lu != null" >
        lu = #{record.lu,jdbcType=CHAR},
      </if>
      <if test="record.ru != null" >
        ru = #{record.ru,jdbcType=CHAR},
      </if>
      <if test="record.ld != null" >
        ld = #{record.ld,jdbcType=CHAR},
      </if>
      <if test="record.rd != null" >
        rd = #{record.rd,jdbcType=CHAR},
      </if>
      <if test="record.discoveredTime != null" >
        discovered_time = #{record.discoveredTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.note != null" >
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.isDeleted != null" >
        is_deleted = #{record.isDeleted,jdbcType=BIT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update flag
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      bird_id = #{record.birdId,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      flag_color_combination = #{record.flagColorCombination,jdbcType=CHAR},
      lu = #{record.lu,jdbcType=CHAR},
      ru = #{record.ru,jdbcType=CHAR},
      ld = #{record.ld,jdbcType=CHAR},
      rd = #{record.rd,jdbcType=CHAR},
      discovered_time = #{record.discoveredTime,jdbcType=TIMESTAMP},
      note = #{record.note,jdbcType=VARCHAR},
      is_deleted = #{record.isDeleted,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.kalyter.ccwcc.model.Flag" >
    update flag
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="birdId != null" >
        bird_id = #{birdId,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="flagColorCombination != null" >
        flag_color_combination = #{flagColorCombination,jdbcType=CHAR},
      </if>
      <if test="lu != null" >
        lu = #{lu,jdbcType=CHAR},
      </if>
      <if test="ru != null" >
        ru = #{ru,jdbcType=CHAR},
      </if>
      <if test="ld != null" >
        ld = #{ld,jdbcType=CHAR},
      </if>
      <if test="rd != null" >
        rd = #{rd,jdbcType=CHAR},
      </if>
      <if test="discoveredTime != null" >
        discovered_time = #{discoveredTime,jdbcType=TIMESTAMP},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.kalyter.ccwcc.model.Flag" >
    update flag
    set user_id = #{userId,jdbcType=INTEGER},
      bird_id = #{birdId,jdbcType=INTEGER},
      code = #{code,jdbcType=VARCHAR},
      flag_color_combination = #{flagColorCombination,jdbcType=CHAR},
      lu = #{lu,jdbcType=CHAR},
      ru = #{ru,jdbcType=CHAR},
      ld = #{ld,jdbcType=CHAR},
      rd = #{rd,jdbcType=CHAR},
      discovered_time = #{discoveredTime,jdbcType=TIMESTAMP},
      note = #{note,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>